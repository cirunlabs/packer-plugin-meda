project_name: packer-plugin-meda

before:
  hooks:
    - go mod tidy

builds:
  - id: plugin
    binary: packer-plugin-meda
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.Version={{.Version}}
      - -X main.VersionPrerelease=
    mod_timestamp: '{{ .CommitTimestamp }}'

archives:
  - id: plugin
    builds:
      - plugin
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format: zip
    files:
      - LICENSE*
      - README*
      - CHANGELOG*

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - Merge pull request
      - Merge branch
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: Others
      order: 999

release:
  draft: false
  prerelease: auto
  name_template: "v{{ .Version }}"
  header: |
    ## Packer Plugin for Meda v{{ .Version }}

    This release contains binaries for the Packer plugin for Meda.

    ### Installation

    ```bash
    # Download the appropriate binary for your platform
    curl -LO https://github.com/cirunlabs/packer-plugin-meda/releases/download/v{{ .Version }}/packer-plugin-meda_{{ .Version }}_linux_amd64.zip

    # Extract and install
    unzip packer-plugin-meda_{{ .Version }}_linux_amd64.zip
    chmod +x packer-plugin-meda
    packer plugins install --path packer-plugin-meda github.com/cirunlabs/meda
    ```

    ### Usage

    See the [documentation](https://github.com/cirunlabs/packer-plugin-meda/blob/main/README.md) for usage examples.
  footer: |
    **Full Changelog**: https://github.com/cirunlabs/packer-plugin-meda/compare/{{ .PreviousTag }}...v{{ .Tag }}

snapshot:
  name_template: "{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}"

# Remove GPG signing for now - can be added later if needed
# signs:
#   - artifacts: checksum
#     cmd: gpg
#     args: ["--batch", "--local-user", "{{ .Env.GPG_FINGERPRINT }}", "--output", "${signature}", "--detach-sign", "${artifact}"]